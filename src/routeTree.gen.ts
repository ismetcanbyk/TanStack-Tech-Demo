/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as appPokemonLayoutRouteImport } from './routes/(app)/pokemon/_layout'
import { Route as appPostsIndexRouteImport } from './routes/(app)/posts/index'
import { Route as appPokemonIndexRouteImport } from './routes/(app)/pokemon/index'
import { Route as appPostsPostIdRouteImport } from './routes/(app)/posts/$postId'
import { Route as appPokemonPokemonIdRouteImport } from './routes/(app)/pokemon/$pokemonId'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const appPokemonLayoutRoute = appPokemonLayoutRouteImport.update({
  id: '/(app)/pokemon',
  path: '/pokemon',
  getParentRoute: () => rootRouteImport,
} as any)
const appPostsIndexRoute = appPostsIndexRouteImport.update({
  id: '/(app)/posts/',
  path: '/posts/',
  getParentRoute: () => rootRouteImport,
} as any)
const appPokemonIndexRoute = appPokemonIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => appPokemonLayoutRoute,
} as any)
const appPostsPostIdRoute = appPostsPostIdRouteImport.update({
  id: '/(app)/posts/$postId',
  path: '/posts/$postId',
  getParentRoute: () => rootRouteImport,
} as any)
const appPokemonPokemonIdRoute = appPokemonPokemonIdRouteImport.update({
  id: '/$pokemonId',
  path: '/$pokemonId',
  getParentRoute: () => appPokemonLayoutRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/pokemon': typeof appPokemonLayoutRouteWithChildren
  '/pokemon/$pokemonId': typeof appPokemonPokemonIdRoute
  '/posts/$postId': typeof appPostsPostIdRoute
  '/pokemon/': typeof appPokemonIndexRoute
  '/posts': typeof appPostsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/pokemon/$pokemonId': typeof appPokemonPokemonIdRoute
  '/posts/$postId': typeof appPostsPostIdRoute
  '/pokemon': typeof appPokemonIndexRoute
  '/posts': typeof appPostsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/(app)/pokemon': typeof appPokemonLayoutRouteWithChildren
  '/(app)/pokemon/$pokemonId': typeof appPokemonPokemonIdRoute
  '/(app)/posts/$postId': typeof appPostsPostIdRoute
  '/(app)/pokemon/': typeof appPokemonIndexRoute
  '/(app)/posts/': typeof appPostsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/pokemon'
    | '/pokemon/$pokemonId'
    | '/posts/$postId'
    | '/pokemon/'
    | '/posts'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/pokemon/$pokemonId' | '/posts/$postId' | '/pokemon' | '/posts'
  id:
    | '__root__'
    | '/'
    | '/(app)/pokemon'
    | '/(app)/pokemon/$pokemonId'
    | '/(app)/posts/$postId'
    | '/(app)/pokemon/'
    | '/(app)/posts/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  appPokemonLayoutRoute: typeof appPokemonLayoutRouteWithChildren
  appPostsPostIdRoute: typeof appPostsPostIdRoute
  appPostsIndexRoute: typeof appPostsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/pokemon': {
      id: '/(app)/pokemon'
      path: '/pokemon'
      fullPath: '/pokemon'
      preLoaderRoute: typeof appPokemonLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/posts/': {
      id: '/(app)/posts/'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof appPostsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/pokemon/': {
      id: '/(app)/pokemon/'
      path: '/'
      fullPath: '/pokemon/'
      preLoaderRoute: typeof appPokemonIndexRouteImport
      parentRoute: typeof appPokemonLayoutRoute
    }
    '/(app)/posts/$postId': {
      id: '/(app)/posts/$postId'
      path: '/posts/$postId'
      fullPath: '/posts/$postId'
      preLoaderRoute: typeof appPostsPostIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/pokemon/$pokemonId': {
      id: '/(app)/pokemon/$pokemonId'
      path: '/$pokemonId'
      fullPath: '/pokemon/$pokemonId'
      preLoaderRoute: typeof appPokemonPokemonIdRouteImport
      parentRoute: typeof appPokemonLayoutRoute
    }
  }
}

interface appPokemonLayoutRouteChildren {
  appPokemonPokemonIdRoute: typeof appPokemonPokemonIdRoute
  appPokemonIndexRoute: typeof appPokemonIndexRoute
}

const appPokemonLayoutRouteChildren: appPokemonLayoutRouteChildren = {
  appPokemonPokemonIdRoute: appPokemonPokemonIdRoute,
  appPokemonIndexRoute: appPokemonIndexRoute,
}

const appPokemonLayoutRouteWithChildren =
  appPokemonLayoutRoute._addFileChildren(appPokemonLayoutRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  appPokemonLayoutRoute: appPokemonLayoutRouteWithChildren,
  appPostsPostIdRoute: appPostsPostIdRoute,
  appPostsIndexRoute: appPostsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
